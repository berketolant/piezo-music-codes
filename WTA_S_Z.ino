int tonePin = 11;
const int ledPin2 = 9;
const int ledPin1 = 10;
int counter = 0;

void setup() {
pinMode(tonePin, OUTPUT);
pinMode(ledPin1, OUTPUT);
pinMode(ledPin2, OUTPUT);
}
void loop() {
midi();
}
void beep(int tonePin, int note, int duration)
{
tone(tonePin, note, duration);
 
if(counter % 2 == 0)
{
digitalWrite(ledPin1, HIGH);
delay(duration);
digitalWrite(ledPin1, LOW);
}
else
{
digitalWrite(ledPin2, HIGH);
delay(duration);
digitalWrite(ledPin2, LOW);
}
noTone(tonePin);
//delay(1);
counter++;
}

void midi() {
    
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 1281.25);
    //delay(1281.25);
    delay(68.75);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 622, 1281.25);
    //delay(1281.25);
    delay(68.75);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 141.25);
    //delay(141.25);
    delay(308.75);
    beep(tonePin, 554, 568.75);
    //delay(568.75);
    delay(31.25);
    beep(tonePin, 622, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 568.75);
    //delay(568.75);
    delay(31.25);
    beep(tonePin, 987, 568.75);
    //delay(568.75);
    delay(31.25);
    beep(tonePin, 830, 1138.75);
    //delay(1138.75);
    delay(61.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 1281.25);
    //delay(1281.25);
    delay(68.75);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 622, 1281.25);
    //delay(1281.25);
    delay(68.75);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 141.25);
    //delay(141.25);
    delay(308.75);
    beep(tonePin, 554, 568.75);
    //delay(568.75);
    delay(31.25);
    beep(tonePin, 622, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 568.75);
    //delay(568.75);
    delay(31.25);
    beep(tonePin, 987, 568.75);
    //delay(568.75);
    delay(31.25);
    beep(tonePin, 830, 1138.75);
    //delay(1138.75);
    delay(61.25);
    beep(tonePin, 880, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(616.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 568.75);
    //delay(568.75);
    delay(631.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 426.25);
    //delay(426.25);
    delay(23.75);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 554, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 711.25);
    //delay(711.25);
    delay(638.75);
    beep(tonePin, 880, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(616.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 739, 426.25);
    //delay(426.25);
    delay(23.75);
    beep(tonePin, 987, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(616.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 426.25);
    //delay(426.25);
    delay(23.75);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 554, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 711.25);
    //delay(711.25);
    delay(938.75);
    beep(tonePin, 493, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 622, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 568.75);
    //delay(568.75);
    delay(331.25);
    beep(tonePin, 554, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 493, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 493, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 568.75);
    //delay(568.75);
    delay(181.25);
    beep(tonePin, 493, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 493, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 739, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 622, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 568.75);
    //delay(568.75);
    delay(331.25);
    beep(tonePin, 830, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 880, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 493, 711.25);
    //delay(711.25);
    delay(938.75);
    beep(tonePin, 493, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 622, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 568.75);
    //delay(568.75);
    delay(331.25);
    beep(tonePin, 554, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 493, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 493, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 739, 568.75);
    //delay(568.75);
    delay(181.25);
    beep(tonePin, 493, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 493, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 739, 426.25);
    //delay(426.25);
    delay(23.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 659, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 622, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 554, 283.75);
    //delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 568.75);
    //delay(568.75);
    delay(331.25);
    beep(tonePin, 830, 141.25);
    //delay(141.25);
    delay(8.75);
    beep(tonePin, 880, 283.75);
   // delay(283.75);
    delay(16.25);
    beep(tonePin, 830, 283.75);
   // delay(283.75);
    delay(16.25);
    beep(tonePin, 659, 283.75);
   // delay(283.75);
    delay(16.25);
    beep(tonePin, 554, 283.75);
   // delay(283.75);
    delay(16.25);
    beep(tonePin, 493, 1281.25);
    delay(12801.25);

  

}
